type User @model {
  id: ID!
  projects: [Project] @connection(keyName: "byFreelancer", fields: ["id"])
  name: String!
  role: UserRole!
  avatarUrl: String
}

enum UserRole {
  FREELANCER
  CLIENT
}

type Project @model @key(name: "byFreelancer", fields: ["freelancerID"], queryField: "projectsByFreelancer") {
  id: ID!
  freelancerID: ID!
  freelancer: User @connection(fields: ["freelancerID"])
  clientID: ID!
  client: User @connection(fields: ["clientID"])
  comments: [Comment] @connection(keyName: "byProject", fields: ["id"])
  quotes: [Quote] @connection(keyName: "byProject", fields: ["id"])
  initialContact: InitialContact
}

type InitialContact {
  message: String!
}

type Quote @model @key(name: "byProject", fields: ["projectID"]) {
  id: ID!
  projectID: ID!
  tasks: [Task] @connection(keyName: "byQuote", fields:["id"])
}

type Comment @model @key(name: "byProject", fields: ["projectID"]) {
  id: ID!
  projectID: ID!
  content: String!
  creatorID: ID!
  creator: User! @connection(fields: ["creatorID"])
}

type Task @model @key(name: "byQuote", fields: ["quoteID"]) {
  id: ID!
  quoteID: ID!
  text: String!
  completed: Boolean!
}
